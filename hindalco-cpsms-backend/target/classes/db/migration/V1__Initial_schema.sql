-- Production Database Schema for Hindalco C-PSMS - PostgreSQL
-- Enhanced schema with comprehensive entity relationships

-- Enable UUID extension for PostgreSQL
--CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- =====================================================
-- CORE TABLES
-- =====================================================

-- Departments table
CREATE TABLE departments (
    id BIGSERIAL PRIMARY KEY,
    name VARCHAR(100) UNIQUE NOT NULL,
    description TEXT,
    location VARCHAR(100),
    budget DECIMAL(15, 2),
    head_id BIGINT,
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Roles table for RBAC
CREATE TABLE roles (
    id BIGSERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE,
    description TEXT,
    permissions TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Users table
CREATE TABLE users (
    id BIGSERIAL PRIMARY KEY,
    employee_id VARCHAR(20) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department_id BIGINT,
    position VARCHAR(100),
    phone VARCHAR(20),
    status VARCHAR(20) DEFAULT 'ACTIVE',
    role_id BIGINT,
    last_login_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Locations table
CREATE TABLE locations (
    id BIGSERIAL PRIMARY KEY,
    name VARCHAR(100) UNIQUE NOT NULL,
    description TEXT,
    latitude DECIMAL(10, 6),
    longitude DECIMAL(10, 6),
    risk_level VARCHAR(20) CHECK (risk_level IN ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL')),
    safety_officer_id BIGINT,
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Permit Types table
CREATE TABLE permit_types (
    id BIGSERIAL PRIMARY KEY,
    name VARCHAR(100) UNIQUE NOT NULL,
    description TEXT,
    required_ppe TEXT,
    risk_assessment TEXT,
    validity_hours INTEGER,
    requires_approval BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Permits table
CREATE TABLE permits (
    id BIGSERIAL PRIMARY KEY,
    permit_number VARCHAR(255) NOT NULL UNIQUE,
    permit_type_id BIGINT NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    location_id BIGINT,
    work_location VARCHAR(255),
    start_date TIMESTAMP,
    end_date TIMESTAMP,
    risk_level VARCHAR(255),
    risk_assessment_details TEXT,
    safety_measures TEXT,
    required_ppe TEXT,
    status VARCHAR(255) NOT NULL DEFAULT 'DRAFT',
    applicant_id BIGINT NOT NULL,
    approved_by_id BIGINT,
    rejected_by_id BIGINT,
    rejection_reason TEXT,
    submitted_at TIMESTAMP,
    approved_at TIMESTAMP,
    rejected_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Notifications table
CREATE TABLE notifications (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    permit_id BIGINT,
    type VARCHAR(50) NOT NULL,
    title VARCHAR(200) NOT NULL,
    message TEXT NOT NULL,
    is_read BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Visitor requests table
CREATE TABLE visitor_requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    visitor_name VARCHAR(100) NOT NULL,
    visitor_email VARCHAR(100),
    visitor_phone VARCHAR(20),
    visitor_company VARCHAR(100),
    purpose TEXT NOT NULL,
    visit_date DATE NOT NULL,
    visit_time TIME NOT NULL,
    duration_hours INTEGER DEFAULT 1,
    host_employee_id BIGINT NOT NULL,
    status VARCHAR(20) DEFAULT 'PENDING',
    approved_by BIGINT,
    approved_at TIMESTAMP,
    check_in_time TIMESTAMP,
    check_out_time TIMESTAMP,
    rejection_reason TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- JWT Token Management
CREATE TABLE refresh_tokens (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    token_hash VARCHAR(255) NOT NULL UNIQUE,
    user_id BIGINT NOT NULL REFERENCES users(id),
    expires_at TIMESTAMP NOT NULL,
    revoked BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Permit Status History (Audit Trail)
CREATE TABLE permit_status_history (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    permit_id BIGINT NOT NULL REFERENCES permits(id),
    previous_status VARCHAR(20),
    new_status VARCHAR(20) NOT NULL,
    changed_by_id BIGINT NOT NULL REFERENCES users(id),
    change_reason TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Equipment/Tools for Permits
CREATE TABLE permit_equipment (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    permit_id BIGINT NOT NULL REFERENCES permits(id),
    equipment_name VARCHAR(200) NOT NULL,
    equipment_type VARCHAR(100),
    serial_number VARCHAR(100),
    last_inspection_date DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Workers assigned to permits
CREATE TABLE permit_workers (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    permit_id BIGINT NOT NULL REFERENCES permits(id),
    worker_name VARCHAR(200) NOT NULL,
    worker_id VARCHAR(50),
    competency_level VARCHAR(50),
    role_in_work VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- System Configuration
CREATE TABLE system_settings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    setting_key VARCHAR(100) NOT NULL UNIQUE,
    setting_value TEXT NOT NULL,
    description TEXT,
    updated_by_id BIGINT REFERENCES users(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Comprehensive Audit Log
CREATE TABLE audit_logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT REFERENCES users(id),
    action VARCHAR(100) NOT NULL,
    entity_type VARCHAR(50) NOT NULL,
    entity_id BIGINT NOT NULL,
    old_values TEXT,
    new_values TEXT,
    ip_address VARCHAR(45),
    user_agent TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Add foreign key constraints
ALTER TABLE users ADD CONSTRAINT fk_users_role FOREIGN KEY (role_id) REFERENCES roles(id);
ALTER TABLE permits ADD CONSTRAINT fk_permits_applicant FOREIGN KEY (applicant_id) REFERENCES users(id);
ALTER TABLE permits ADD CONSTRAINT fk_permits_approver FOREIGN KEY (approved_by) REFERENCES users(id);
ALTER TABLE notifications ADD CONSTRAINT fk_notifications_user FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE notifications ADD CONSTRAINT fk_notifications_permit FOREIGN KEY (permit_id) REFERENCES permits(id);
ALTER TABLE visitor_requests ADD CONSTRAINT fk_visitor_requests_host FOREIGN KEY (host_employee_id) REFERENCES users(id);
ALTER TABLE visitor_requests ADD CONSTRAINT fk_visitor_requests_approver FOREIGN KEY (approved_by) REFERENCES users(id);

-- Create indexes
CREATE INDEX idx_users_employee_id ON users(employee_id);
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_permits_status ON permits(status);
CREATE INDEX idx_permits_applicant_id ON permits(applicant_id);
CREATE INDEX idx_notifications_user_id ON notifications(user_id);
CREATE INDEX idx_visitor_requests_host_employee_id ON visitor_requests(host_employee_id);

-- Insert default roles
INSERT INTO roles (name, description, permissions) VALUES
('ADMIN', 'System Administrator', '["MANAGE_USERS", "MANAGE_PERMITS", "MANAGE_VISITORS", "VIEW_ANALYTICS"]'),
('SAFETY_OFFICER', 'Safety Officer', '["APPROVE_PERMITS", "MANAGE_PERMITS", "VIEW_PERMITS"]'),
('SUPERVISOR', 'Department Supervisor', '["APPROVE_PERMITS", "VIEW_PERMITS", "CREATE_PERMITS"]'),
('EMPLOYEE', 'Regular Employee', '["CREATE_PERMITS", "VIEW_OWN_PERMITS"]'),
('SECURITY', 'Security Personnel', '["MANAGE_VISITORS", "VIEW_VISITORS"]');